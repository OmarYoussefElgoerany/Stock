// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockDAL;

#nullable disable

namespace StockDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240102011319_intialWithSeeding")]
    partial class intialWithSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockDAL.Data.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TV",
                            Price = 200m,
                            Quantity = 50,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mobile",
                            Price = 150m,
                            Quantity = 100,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tablet",
                            Price = 200m,
                            Quantity = 50,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Microwave",
                            Price = 180m,
                            Quantity = 30,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("StockDAL.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "PO Box 11621",
                            Name = "Tech Oasis"
                        },
                        new
                        {
                            Id = 2,
                            Address = "PO Box 29634",
                            Name = "E-Store Express"
                        });
                });

            modelBuilder.Entity("StockDAL.Data.Models.Item", b =>
                {
                    b.HasOne("StockDAL.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("StockDAL.Store", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
