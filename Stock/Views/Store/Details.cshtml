@model List<ReadStoreWithItemsDto>
@{
    ViewData["Title"] = "Details";
   // SelectList selectListItems = new SelectList(@ViewBag.stores,"Id","Name");
}

<h2>Store Details</h2>


<div class="container mt-3">
  <form asp-controller="Item" asp-action="UpdateQuan" method="post">
    <div class="mb-3 mt-3">
      <label class="fw-bold">Choose Store</label>
          <select class="form-select" name="Id" id="store" onchange="getValue()">
                 <option selected>Select Item</option>
                @foreach (var item in Model)
                {
                        <option value="@item.Id">@item.Name</option>
                }
      </select>
    </div>
    <div class="mb-3">
      <label>Items:</label>
      <select class="form-select"  name="item_Id" id="items" onchange="GetQuantity()">
                 <option selected>Select Item</option>
      </select>
    </div>
    <div>
       <label>Quantity:</label>
      <input name="Quantity"  oninput="SetBalance()" type="number" class="form-control" type="number"  id="inputQuantity" >
    </div>
    <div>
       <label>Balance:</label>
      <input readonly  class="form-control" type="number"  id="balance" >
    </div>
    <div class="m-3">
     <button type="submit" class="btn btn-primary">Save</button>
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Back</a>
    </div>
   

  </form>
</div>

@section Scripts{
    <script>

        //GetID Of Store
         function getValue() {
         var dropdown = document.getElementById("store");
         var Id = dropdown.value;
          console.log(Id)
             $.ajax({
                url: "/Item/GetItems",
                data: { "Id": Id }, 
                success: function(items) {
                populateDropdown(items)
               }
            });
        }

        //Fill The Dropdown list with Store Items
        function populateDropdown(items) {
            console.log(items)
                   let dropdown = document.getElementById("items");
                   dropdown.innerHTML = "";
                   let defaultOption = document.createElement("option");
                   defaultOption.text = "Select item";
                   dropdown.appendChild(defaultOption);
                     items.forEach(function(item) {
                     var option = document.createElement("option");
                     option.value = item.id;
                     option.text = item.name;
                     dropdown.appendChild(option);
                   });
                 }
        //Get Quantity of specifc item
          function GetQuantity() {
              let dropdown = document.getElementById("items");
              let selectedIndex = dropdown.selectedIndex;

              if (selectedIndex !== -1) {
                let selectedOption = dropdown.options[selectedIndex];
                let Id = selectedOption.value;
                      $.ajax({
                           url: "/Item/GetItemsDetials",
                           data: { "Id": Id }, 
                           success: function(item) {
                           let inputField = document.getElementById("inputQuantity");
                           inputField.value =item.quantity;
                           let balanceField = document.getElementById("balance");
                            balanceField.value = item.quantity
                       }
                      });
                  }
             }

             //set the value of balance
                function SetBalance(){
                   let quantityField = document.getElementById("inputQuantity");
                   let balanceField = document.getElementById("balance");
                        balanceField.value = quantityField.value;
                }
   
    </script>
            <partial name="_ValidationScriptsPartial" />
}

